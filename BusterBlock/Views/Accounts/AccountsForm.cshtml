@model BusterBlock.Models.Account

@{
    ViewBag.Title = "View";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm("Create", "Accounts"))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Account</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.AccountCD, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.AccountCD, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.AccountCD, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CustomerId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input id="Customer" class="form-control" type="text"/>
            @Html.ValidationMessageFor(model => model.CustomerId, "", new { @class = "text-danger" })
            @Html.EditorFor(m => m.CustomerId, new { htmlAttributes = new { @class = " hidden", id = "CustomerId" } })

        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.CardNumber, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(m => m.CardNumber, new { htmlAttributes = new { @class = "form-control", id = "CardNumber" } })
            @Html.ValidationMessageFor(model => model.CardNumber, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.IsCashAccount, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.IsCashAccount, new { htmlAttributes = new { id = "CashAccountCheckbox" } })
                @Html.ValidationMessageFor(model => model.IsCashAccount, "", new { @class = "text-danger" })
            </div>
        </div>
        @Html.LabelFor(model => model.Payable, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.Payable)
                @Html.ValidationMessageFor(model => model.Payable, "", new { @class = "text-danger" })
            </div>
        </div>
        @Html.LabelFor(model => model.Receivable, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.Receivable)
                @Html.ValidationMessageFor(model => model.Receivable, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="col-sm-offset-1 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section scripts
{
    <script>

        $(document).ready(function () {

            var customers = new Bloodhound({
                datumTokenizer: Bloodhound.tokenizers.obj.whitespace('name'),
                queryTokenizer: Bloodhound.tokenizers.whitespace,
                remote: {
                    url: '/api/customers?query=%QUERY',
                    wildcard: '%QUERY'
                }
            });

            $('#Customer').typeahead({
                minLength: 3,
                highlight: true
            }, {
                name: 'customers',
                display: 'name',
                source: customers
            }).on("typeahead:select", function (e, customer) {
                $('#CustomerId').val(customer.id);
            });

        });

        $('#CashAccountCheckbox').click(function () {

            var cardNumber = $('#CardNumber');

            if ($(this).is(':checked')) {
                cardNumber.val('');

                cardNumber.attr('disabled', 'disabled');
            }
            else {
                cardNumber.removeAttr('disabled');
            }
        });

    </script>
}
